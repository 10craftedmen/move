<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>mv</string>
		<string>move</string>
	</array>
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~M</string>
	<key>name</key>
	<string>Move</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.move</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(#).*$\n?</string>
			<key>name</key>
			<string>comment.line.move</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.move</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.move</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.move</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.move</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.move</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.move</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: foo = ^() { … }</string>
			<key>match</key>
			<string>([a-zA-Z_?$][\w?$]*)\s*([=:])\s*(\^)\s*(\()(.*?)(\))</string>
			<key>name</key>
			<string>meta.function.move</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.move</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.move</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.move</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: foo = ^{ … }</string>
			<key>match</key>
			<string>([a-zA-Z_?$][\w?$]*)\s*([=:])\s*(\^)\s*\{</string>
			<key>name</key>
			<string>meta.function.move</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.move</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.move</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.move</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: ^(){ … }</string>
			<key>match</key>
			<string>(\^)\s*(\()(.*?)(\))\s*\{</string>
			<key>name</key>
			<string>meta.function.move</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: ^{ … }</string>
			<key>match</key>
			<string>(\^)\s*\{</string>
			<key>name</key>
			<string>meta.function.move</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=[=(:!]|^|return)\s*(/)(?![/*+{}?])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)[igm]*</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.move</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=[\w?$]\s|[\w?$]\s\s|[\w?$]\s\s\s|[\w?$]\s\s\s\s)(/)(?![/*+{}?])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)[igm]*</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.move</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>source.js</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.definition.readwrite.instance.move</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.invocation.function.move</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.move</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: @foo(123) and foo {n:123}</string>
			<key>match</key>
			<string>(@?)([a-zA-Z_?$][\w?$]*)\s*([\(\{])</string>
			<key>name</key>
			<string>meta.function.call.move</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.definition.readwrite.instance.move</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.invocation.function.move</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: @foo "bar", foo.bar /xy/ and foo 123</string>
			<key>match</key>
			<string>(?x)
			  (?:\b(@)|\.|\b)
			  ([a-zA-Z_?$][\w?$]*)
			  \s+
			  (?=(?:(?!instanceof)['"\w\/\^]))</string>
			<key>name</key>
			<string>meta.function.call.move</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.definition.readwrite.instance.move</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(@)[a-zA-Z_]\w*</string>
			<key>name</key>
			<string>variable.other.readwrite.instance.move</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(import|export)\b</string>
			<key>name</key>
			<string>keyword.control.move</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(xor)\b</string>
			<key>name</key>
			<string>keyword.operator.move</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(global|module|exports|__filename|__dirname)\b</string>
			<key>name</key>
			<string>variable.environment.commonjs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(JSON)\b</string>
			<key>name</key>
			<string>support.function.es5</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(require)\b</string>
			<key>name</key>
			<string>support.function.commonjs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(extend|create|inspect|print|repeat|after)\b</string>
			<key>name</key>
			<string>support.function.move</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(self|that)\b</string>
			<key>name</key>
			<string>variable.support.move</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.move</string>
	<key>uuid</key>
	<string>0011590C-A53D-4EC8-84BF-FFBABAD2A38D</string>
</dict>
</plist>
