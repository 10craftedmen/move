import assert

foo = ^(arg1){ return arg1 }

# Straight-forward simple input
assert.equal foo("Hello"), "Hello"

# Chained. Translates to foo(foo(foo("Hello")))
assert.equal foo(foo foo "Hello"), "Hello"

# Keywords arguments should take precedence over shorthand arguments
assert.equal foo {arg1:"Hello"}, "Hello"

# Call precedence should invoke the anonymous lambda first, then foo
assert.equal foo (^{ "Hello" })(), "Hello"

# Multiple arguments
foo2 = ^(a, b, c){ return ''+a+b+c }

# Should translate into: value = foo2("A", "B", "C")
value = foo2 "A", "B", "C"
assert.equal value, "ABC"

# Should translate into: value = foo2("A", foo2("B", "C"))
value = foo2 "A", foo2 "B", "C"
assert.equal value, "ABCundefinedundefined"
